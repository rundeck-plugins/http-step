package edu.ohio.ais.rundeck;

import com.dtolabs.rundeck.core.plugins.configuration.Describable;
import com.dtolabs.rundeck.core.plugins.configuration.Description;
import com.dtolabs.rundeck.core.plugins.configuration.StringRenderingConstants;
import com.dtolabs.rundeck.plugins.util.DescriptionBuilder;
import com.dtolabs.rundeck.plugins.util.PropertyBuilder;

public class HttpDescription  implements Describable {
    String serviceName;
    String title;
    String description;

    public HttpDescription(String serviceName, String title, String description) {
        this.serviceName = serviceName;
        this.title = title;
        this.description = description;
    }

    @Override
    public Description getDescription() {
        return DescriptionBuilder.builder()
                .name(serviceName)
                .title(title)
                .description(description)
                .property(PropertyBuilder.builder()
                        .string("remoteUrl")
                        .title("Remote URL")
                        .description("HTTP URL to which to make the request.")
                        .required(true)
                        .build())
                .property(PropertyBuilder.builder()
                        .select("method")
                        .title("HTTP Method")
                        .description("HTTP method used to make the request.")
                        .required(true)
                        .defaultValue("GET")
                        .values(HttpBuilder.HTTP_METHODS)
                        .build())
                .property(PropertyBuilder.builder()
                        .string("headers")
                        .title("Headers")
                        .description("Add headers in json or yaml format.")
                        .renderingAsTextarea()
                        .build())
                .property(PropertyBuilder.builder()
                        .string("body")
                        .title("Body")
                        .description("Add Body.")
                        .renderingAsTextarea()
                        .build())
                .property(PropertyBuilder.builder()
                        .integer("timeout")
                        .title("Request Timeout")
                        .description("How long to wait for a request to complete before failing.")
                        .defaultValue(HttpWorkflowStepPlugin.DEFAULT_TIMEOUT.toString())
                        .build())
                .property(PropertyBuilder.builder()
                        .booleanType("sslVerify")
                        .title("Validate SSL Certificates")
                        .description("Validate that SSL certificates are trusted, match the hostname, are not expited, etc.")
                        .defaultValue("true")
                        .build())
                .property(PropertyBuilder.builder()
                        .select("authentication")
                        .title("Authentication")
                        .description("Authentication mechanism to use.")
                        .required(false)
                        .defaultValue(HttpBuilder.AUTH_NONE)
                        .values(HttpBuilder.AUTH_NONE, HttpBuilder.AUTH_BASIC, HttpBuilder.AUTH_OAUTH2)
                        .renderingOption(StringRenderingConstants.GROUP_NAME,"Authentication")
                        .build())
                .property(PropertyBuilder.builder()
                        .string("username")
                        .title("Username/Client ID")
                        .description("Username or Client ID to use for authentication.")
                        .required(false)
                        .renderingOption(StringRenderingConstants.GROUP_NAME,"Authentication")
                        .build())
                .property(PropertyBuilder.builder()
                        .string("password")
                        .title("Password/Client Secret")
                        .description("Password or Client Secret to use for authentication.")
                        .required(false)
                        .renderingOption(StringRenderingConstants.SELECTION_ACCESSOR_KEY,
                                StringRenderingConstants.SelectionAccessor.STORAGE_PATH)
                        .renderingOption(StringRenderingConstants.STORAGE_PATH_ROOT_KEY, "keys")
                        .renderingOption(StringRenderingConstants.STORAGE_FILE_META_FILTER_KEY, "Rundeck-data-type=password")
                        .renderingOption(StringRenderingConstants.GROUP_NAME,"Authentication")
                        .build())
                .property(PropertyBuilder.builder()
                        .string("oauthTokenEndpoint")
                        .title("OAuth Token URL")
                        .description("OAuth 2.0 Token Endpoint URL at which to obtain tokens.")
                        .required(false)
                        .renderingOption(StringRenderingConstants.GROUP_NAME,"Authentication")
                        .build())
                .property(PropertyBuilder.builder()
                        .string("oauthValidateEndpoint")
                        .title("OAuth Validate URL")
                        .description("OAuth 2.0 Validate Endpoint URL at which to obtain validate token responses.")
                        .required(false)
                        .renderingOption(StringRenderingConstants.GROUP_NAME,"Authentication")
                        .build())
                .property(PropertyBuilder.builder()
                        .booleanType("checkResponseCode")
                        .title("Check Response Code?")
                        .description("Set if you want to check response code.")
                        .defaultValue("false")
                        .renderingOption(StringRenderingConstants.GROUP_NAME,"Check Response")
                        .build())
                .property(PropertyBuilder.builder()
                        .string("responseCode")
                        .title("Response Code")
                        .description("Response Code expected, the step will fail if the response code is different.")
                        .required(false)
                        .renderingOption(StringRenderingConstants.GROUP_NAME,"Check Response")
                        .build())
                .property(PropertyBuilder.builder()
                        .booleanType("printResponse")
                        .title("Print Response?")
                        .description("Set if the response needs to be printed.")
                        .defaultValue("false")
                        .renderingOption(StringRenderingConstants.GROUP_NAME,"Print")
                        .build())
                .property(PropertyBuilder.builder()
                        .booleanType("printResponseToFile")
                        .title("Print Response to File?")
                        .description("Set if you want to print the response content to a file.")
                        .defaultValue("false")
                        .renderingOption(StringRenderingConstants.GROUP_NAME,"Print")
                        .build())
                .property(PropertyBuilder.builder()
                        .string("file")
                        .title("File Path")
                        .description("File path where you will write the response.")
                        .required(false)
                        .renderingOption(StringRenderingConstants.GROUP_NAME,"Print")
                        .build())
                .property(PropertyBuilder.builder()
                        .booleanType("proxySettings")
                        .title("Use Proxy Settings?")
                        .description("Set if you want to use a proxy.")
                        .defaultValue("false")
                        .renderingOption(StringRenderingConstants.GROUP_NAME,"Proxy Settings")
                        .build())
                .property(PropertyBuilder.builder()
                        .string("proxyIP")
                        .title("Proxy IP")
                        .description("Proxy to use for this request")
                        .required(false)
                        .renderingOption(StringRenderingConstants.GROUP_NAME,"Proxy Settings")
                        .build())
                .property(PropertyBuilder.builder()
                        .integer("proxyPort")
                        .title("Proxy Port")
                        .description("Proxy port to use for this request")
                        .renderingOption(StringRenderingConstants.GROUP_NAME,"Proxy Settings")
                        .required(false)
                        .build())
                .property(PropertyBuilder.builder()
                        .booleanType("printResponseCode")
                        .title("Print Response Code?")
                        .description("Select to print the HTTP response code and status.")
                        .defaultValue("false")
                        .renderingOption(StringRenderingConstants.GROUP_NAME,"Print")
                        .build())
                .build();
    }
}
